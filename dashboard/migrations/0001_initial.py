# Generated by Django 5.2.6 on 2025-09-21 07:40

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('account_name', models.CharField(default='Main Account', max_length=100)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_type', models.CharField(choices=[('categorization', 'Transaction Categorization'), ('fraud', 'Fraud Detection'), ('cashflow', 'Cash Flow Forecast'), ('comprehensive', 'Comprehensive Analysis')], max_length=50)),
                ('result_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('response', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('merchant', models.CharField(blank=True, max_length=200, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.CharField(blank=True, choices=[('FOOD_AND_DRINK', 'Food & Drink'), ('GENERAL_MERCHANDISE', 'General Merchandise'), ('TRANSPORTATION', 'Transportation'), ('ENTERTAINMENT', 'Entertainment'), ('GENERAL_SERVICES', 'General Services'), ('MEDICAL', 'Medical'), ('PERSONAL_CARE', 'Personal Care'), ('HOME_IMPROVEMENT', 'Home Improvement'), ('RENT_AND_UTILITIES', 'Rent & Utilities'), ('TRAVEL', 'Travel'), ('LOAN_PAYMENTS', 'Loan Payments'), ('GOVERNMENT_AND_NON_PROFIT', 'Government & Non-Profit'), ('INCOME', 'Income'), ('TRANSFER_IN', 'Transfer In'), ('TRANSFER_OUT', 'Transfer Out'), ('BANK_FEES', 'Bank Fees')], max_length=50, null=True)),
                ('ai_category', models.CharField(blank=True, choices=[('FOOD_AND_DRINK', 'Food & Drink'), ('GENERAL_MERCHANDISE', 'General Merchandise'), ('TRANSPORTATION', 'Transportation'), ('ENTERTAINMENT', 'Entertainment'), ('GENERAL_SERVICES', 'General Services'), ('MEDICAL', 'Medical'), ('PERSONAL_CARE', 'Personal Care'), ('HOME_IMPROVEMENT', 'Home Improvement'), ('RENT_AND_UTILITIES', 'Rent & Utilities'), ('TRAVEL', 'Travel'), ('LOAN_PAYMENTS', 'Loan Payments'), ('GOVERNMENT_AND_NON_PROFIT', 'Government & Non-Profit'), ('INCOME', 'Income'), ('TRANSFER_IN', 'Transfer In'), ('TRANSFER_OUT', 'Transfer Out'), ('BANK_FEES', 'Bank Fees')], max_length=50, null=True)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('transaction_type', models.CharField(blank=True, choices=[('debit', 'Debit'), ('credit', 'Credit')], max_length=10, null=True)),
                ('is_anomaly', models.BooleanField(default=False)),
                ('anomaly_score', models.FloatField(default=0.0)),
                ('cc_num', models.CharField(blank=True, max_length=20, null=True)),
                ('first', models.CharField(blank=True, max_length=50, null=True)),
                ('last', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=1, null=True)),
                ('street', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('long', models.FloatField(blank=True, null=True)),
                ('city_pop', models.IntegerField(blank=True, null=True)),
                ('job', models.CharField(blank=True, max_length=100, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('trans_num', models.CharField(blank=True, max_length=100, null=True)),
                ('unix_time', models.BigIntegerField(blank=True, null=True)),
                ('merch_lat', models.FloatField(blank=True, null=True)),
                ('merch_long', models.FloatField(blank=True, null=True)),
                ('data_source', models.CharField(choices=[('plaid', 'Open Banking'), ('kaggle', 'Enhanced Data')], default='plaid', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='dashboard.account')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ModelPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(choices=[('setfit', 'SetFit Categorization'), ('xgboost', 'XGBoost Fraud Detection'), ('chronos', 'Chronos-T5 Forecasting')], max_length=20)),
                ('prediction', models.JSONField()),
                ('confidence', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='dashboard.transaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('opening_balance', models.DecimalField(decimal_places=2, max_digits=12)),
                ('closing_balance', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_credits', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_debits', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('transaction_count', models.IntegerField(default=0)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_balances', to='dashboard.account')),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['account', '-date'], name='dashboard_d_account_d7d91d_idx')],
                'unique_together': {('account', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['-date'], name='dashboard_t_date_7d3af2_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['account', '-date'], name='dashboard_t_account_30ca93_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['category'], name='dashboard_t_categor_088142_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['is_anomaly'], name='dashboard_t_is_anom_f7da00_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['data_source'], name='dashboard_t_data_so_aa9ddb_idx'),
        ),
    ]
